doctype html
html
  head
    meta(charset="UTF-8")
    title= title
    link(rel="stylesheet", href="/stylesheets/post_details.css")
  body
  
    .explore-container
      // LEFT NAVIGATION
      nav.left-nav
        h2.logo Peerly
        ul.nav-list
          li.nav-item
            .icon-circle ℹ
            a(href="/api/home") Home
          li.nav-item 
            .icon-circle ℹ
            a(href="/api/users") Explore
          li.nav-item 
            .icon-circle ℹ
            span Messages
          li.nav-item 
            .icon-circle ℹ
            span Notifications
          li.nav-item
            .icon-circle ℹ
            if sessionUserId
              a(href=`/api/users/${sessionUserId}`) Profile
          li.nav-item
            .icon-circle ℹ
            if sessionUserId
              a(href=`/api/users/${sessionUserId}/settings`) Settings
        button.post-btn(onclick="window.location.href='/api/home/create/Post'") Post

        // Logged in user info at the bottom of left nav
        .logged-in
          if sessionProfilePic
            .avatar-circle.logged-in-avatar
              img(src=sessionProfilePic, alt="User Avatar")
          else if sessionUserId
            .avatar-circle.logged-in-avatar
              // Fallback: display first character of the sessionUserId
              | #{sessionUserId[0]}
          if sessionUserId
            span #{sessionUserId}
          else
            span Not logged in.

      // MAIN FEED (CENTER COLUMN)
      main.main-feed
        if post
          .post-card
            .post-header
              // AVATAR + User Info
              .avatar-circle
                if post.profile_picture
                  img(src=post.profile_picture, alt=post.first_name + ' ' + post.last_name)
                  
                else
                  // Fallback that uses initials if no profile_picture
                  | #{post.first_name ? post.first_name[0] : ''}#{post.last_name ? post.last_name[0] : ''}
                  
              .post-user
                  h3= post.first_name + ' ' + post.last_name
                  p= 'Posted At: ' + post.created_at

            .post-body
             
              
              // If there's a media URL:
              if post.media_url
                img(src=post.media_url, alt="Post Image")

              h4= post.first_name + ' ' + post.last_name
              p= post.description

          .post-footer
              // Like section with like count above buttons
              .like-section
                p.like-count #{likecount || 0} Likes
                p.comment-count #{commentcount || 0} Comments
                

                

          // COMMENTS SECTION
          .comments-section
            h3 Comments
            if comments && comments.length
              each comment in comments
                .comment-card
                  .comment-header
                    .comment-avatar-circle
                      if comment.profile_picture
                        img(src=comment.profile_picture, alt=comment.first_name + ' ' + comment.last_name)
                      else
                        | #{comment.first_name ? comment.first_name[0] : ''}#{comment.last_name ? comment.last_name[0] : ''}
                    h4= comment.first_name + ' ' + comment.last_name
                  p= comment.description
                  p.posted-at Commented At: #{comment.created_at}
                  hr
            else
              p No comments yet.

            // COMMENT FORM
            form(action=`/api/comments/${post.post_id}`, method="POST", class="comment-form")
              textarea(name="description", placeholder="Write a comment...", required)
              button(type="submit") Post Comment

        else
          h2 No post found

      // RIGHT SIDEBAR
      aside.right-sidebar
        .widget
          h3 See what's trending
          - // Sort posts by likeCount in descending order and take the first 5
          - var trendingPosts = posts.sort((a, b) => b.likeCount - a.likeCount).slice(0, 5);

          ul.trending-list
            each post in trendingPosts
              a.post-card(href=`/api/home/${post.post_id}`, style="display: block; text-decoration: none; color: inherit;")
                .post-header
                  .avatar-circle
                    if post.profile_picture
                      img(src=post.profile_picture, alt="User Avatar")
                    else
                      | #{post.first_name[0]}
                  h2= post.first_name + " " + post.last_name
                p.post-description= post.description
    // Client-side JavaScript to intercept the like form submission and update UI without redirect
    script.
      document.addEventListener('DOMContentLoaded', function() {
        const likeForms = document.querySelectorAll('.like-form');
        likeForms.forEach(form => {
          form.addEventListener('submit', async function(e) {
            e.preventDefault();
            const action = form.getAttribute('action');
            try {
              const res = await fetch(action, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                credentials: 'include'
              });
              const data = await res.json();
              if (res.ok) {
                // Update the like count text in the closest .like-section
                const likeSection = form.closest('.like-section');
                if (likeSection) {
                  const likeCountElem = likeSection.querySelector('.like-count');
                  if (likeCountElem) {
                    likeCountElem.textContent = data.likeCount + ' Likes';
                  }
                }
                // Update the button text
                const btnTextElem = form.querySelector('.like-btn span');
                if (btnTextElem) {
                  btnTextElem.textContent = data.likedByUser ? 'Unlike' : 'Like';
                }
              } else {
                console.error('Error toggling like:', data.error);
              }
            } catch (err) {
              console.error('Fetch error:', err);
            }
          });
        });
      });
